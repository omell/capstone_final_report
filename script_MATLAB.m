clear
clc

D = 0.5;

f = 100e3;

fsample = 10e3;
Ts = 1/fsample;

L1 = 470e-6;
Rinductor = 83.45e-3;

% additional parasitic resistances appearing between ultra-capacitors and L1
% introduced here
Rfuse = 70e-3;
Rswitch = 10e-3;

R1 = Rinductor + Rfuse + Rswitch;

L2 = L1;
R2 = Rinductor;

C1 = 12e-6;
R3 = 45e-3;

C2 = 8.2e-6;
R4 = 80e-3;

R_o = 36e-3;
g_FS = 13.2e-3;

R_D = 1.3;
V_D = 0.36;

V_g = 5;

R = 100;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
A1 = [ 0      0                0             -1/C1;...
       0     -1/(C2*(R + R4))  0              R/(C2*(R + R4));...
       0      0               -(R1 + R_o)/L1 -R_o/L1;...
      -1/L2  -R/(L2*(R + R4)) -R_o/L2         (R2 + R3 - R_o - R*R4/(R + R4))/L2];

b1 = [0    0 0 0;...
      0    0 0 0;...
      1/L1 0 0 0;...
      0    0 0 0];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
A2 = [ 0     0                1/C1                0;...
       0    -1/(C2*(R + R4))  0                   R/(C2*(R + R4));...
      -1/L1  0               -(R1 + R3 + R_D)/L1 -R_D/L1;...
       0    -R/(L2*(R + R4)) -R_D/L2              (R2 - R_D - R*R4/(R + R4))/L2];

b2 = [0     0    0 0;...
      0     0    0 0;...
      1/L1 -1/L1 0 0;...
      0    -1/L2 0 0];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
A = D*A1 + (1 - D)*A2;
b = D*b1 + (1 - D)*b2;
c = [0 R/(R + R4) 0 R*R4/(R + R4)];
bD = (A1 - A2)*X + (b1 - b2)*U;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
U = [V_g V_D 0 0].';
X = -inv(A)*b*U;
Y = c*X;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% augment with state for integral error
Aa = [A(1,:) 0; A(2,:) 0; A(3,:) 0; A(4,:) 0; c(1) c(2) c(3) c(4) 0];
ba = [b(1,:); b(2,:); b(3,:); b(4,:); 0 0 0 0];
bDa = [bD; 0];
ca = [c 0];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LQR
w = 1;
w_aux = 0;
w_v_C1 = w_aux;
w_v_C2 = w_aux;
w_i_L1 = w_aux;
w_i_L2 = w_aux;
w_i = 100;
q = diag([w_v_C1 w_v_C2 w_i_L1 w_i_L2 w_i]);
r = 1;

K = lqr(Aa, bDa, w*q, r);

Kf = [K(1) K(2) K(3) K(4)];
Ki = K(5);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% observer
p1 = -10*10*max(abs(real(eig(A))));

L = acker(A', c', [p1 p1 p1 p1])';
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% discretising
AALc_bar = expm((A - L*c)*Ts);

fun_obsv = @(x) expm((A - L*c)*x);
q_int = integral(fun_obsv, 0, Ts, 'arrayvalued', true);

bALc_bar = q_int*b;
bDALc_bar = q_int*bD;
LALc_bar = q_int*L;
cALc_bar = c;